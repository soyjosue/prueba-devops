name: Devsu

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.15.0]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./src/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./src

    - name: Set environment for tests
      run: cp .env.test .env
      working-directory: ./src

    - name: Create DB folder
      run: mkdir -p ./databases
      working-directory: ./src

    - name: Run tests
      run: npm test
      working-directory: ./src

    - name: Run ESLint
      run: npx eslint . --ext .js,.ts
      working-directory: ./src
    
    - name: Run tests with coverage
      run: npx jest --coverage
      working-directory: ./src
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./src/coverage

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./src
        file: ./src/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/devsu:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/devsu:cache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/devsu:cache,mode=max

